<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[日新移动端App开发代码规范 for Android]]></title>
      <url>http://yoursite.com/2016/08/01/%E6%97%A5%E6%96%B0APP%E5%BC%80%E5%8F%91%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83forAndroid/</url>
      <content type="html"><![CDATA[<p><img src="http://p1.bqimg.com/570064/5eda2199e2da5064.png" alt=""></p><p>阅读《App研发录》与《Android开发艺术》有感，遂写下此文以记录心得，顺便带波节奏。</p><a id="more"></a><h3 id="Android命名规范"><a href="#Android命名规范" class="headerlink" title="Android命名规范"></a>Android命名规范</h3><h4 id="Java类命名规范"><a href="#Java类命名规范" class="headerlink" title="Java类命名规范"></a>Java类命名规范</h4><ul><li>Activity命名规范：以Activity作为后缀。例如：PersonActvity</li><li>Adapter命名规范：以Adapter作为后缀。例如：PersonAdapter</li></ul><h4 id="资源文件命名规范"><a href="#资源文件命名规范" class="headerlink" title="资源文件命名规范"></a>资源文件命名规范</h4><ol><li><p>layout目录下文件命名规范</p><ul><li><p><strong>页面布局文件。</strong>以act_为前缀，以Activity所在的Package作为中枢，以Activity的名称（去掉Activity后缀）为后缀。注意都要小写。<br>例如，对于Person这个模块下的AddCustomerActivity，它的layout文件就应该是：act_person_addcustomer.xml</p></li><li><p><strong>item布局文件规范。</strong>以item_为固定前缀，列表项的名称为后缀。注意都是小写。例如。某个页面下有一个用户列表，控件名称为lvUserList，那么item的layout就应该是：item_lvUserList.xml</p></li><li><p><strong>Dialog布局文件。</strong>以dlg_为古斯能够前缀，Dialog的功能名称为后缀。注意都是小写，例如：dlg_hint.xml</p></li></ul></li><li><p>drawble目录下文件命名规范<br>无论是图片，或者是Selector文件，都应该遵循下述命名规范：</p></li></ol><ul><li>对于只在一个页面使用的资源，就以该页面的名称作为前缀；</li><li>对于制作一个模块下多个页面使用的资源，就以该模块的名称作为前缀</li><li>对于在各个模块、各个页面都有可能使用的资源，比如上导航、下导航，以common为前缀</li></ul><h4 id="Java类中控件对象的命名规范"><a href="#Java类中控件对象的命名规范" class="headerlink" title="Java类中控件对象的命名规范"></a>Java类中控件对象的命名规范</h4><p>控件类型缩写+控件的逻辑名称（首字母大写），比如登陆按钮，就可以命名为btnLogin，若为私有类型，则为mBtnLogin。部分控件简称如下表：</p><table><thead><tr><th>控 件 名 称</th><th>简 称</th><th></th><th>控 件 名 称</th><th>简 称</th></tr></thead><tbody><tr><td>TextView</td><td>tv</td><td></td><td>EditView</td><td>et</td></tr><tr><td>Button</td><td>btn</td><td></td><td>TimePicker</td><td>tp</td></tr><tr><td>ImageButton</td><td>img</td><td></td><td>ToggleButton</td><td>tb</td></tr><tr><td>ImageView</td><td>iv</td><td></td><td>ProgressBar</td><td>pb</td></tr><tr><td>CheckBox</td><td>chk</td><td></td><td>WebView</td><td>wv</td></tr><tr><td>DatePicker</td><td>dp</td><td></td><td>ListView</td><td>lv</td></tr><tr><td>RecyclerView</td><td>rcv</td><td></td><td>MapView</td><td>mv</td></tr></tbody></table><h4 id="Layout中控件对象的命名规范"><a href="#Layout中控件对象的命名规范" class="headerlink" title="Layout中控件对象的命名规范"></a>Layout中控件对象的命名规范</h4><p>遵循传统Android命名规范，使用小写字母与下划线的搭配，但建议与Activity中的控件名保持一致2，如下：</p><p><code>Button mBtnLogin = findViewById(R.id.btn_login);</code></p><h4 id="string-xml中常量的命名规范"><a href="#string-xml中常量的命名规范" class="headerlink" title="string.xml中常量的命名规范"></a>string.xml中常量的命名规范</h4><p>因为这些值大多在Layout中的控件上使用，所以该常量所在的Activity名称作为前缀，后面接控件名称，在后面就自由发挥了。<br>例：登录界面登录按钮上显示的文字:<br><code>loginActivity_btnLogin_text</code></p><p>另一种使用场景则是在Java代码中使用，可能出现在Activity中，也可能出现在工具类Utils中，这时候，如果是和具体Activity相关，那么规则和上面的一样；如果涉及到和公共模块与控件相关，那么就加上common_前缀。</p><p>strings.xml文件命名规则可以灵活一些。我们可以将其按照模块拆分为对个strings文件，只要resources标签下都是string标签就行，编译打包时会自动将同类文件进行合并。（这个暂缓，好像这样一来，string变量命名就有可能冲突了）</p><h4 id="常量命名"><a href="#常量命名" class="headerlink" title="常量命名"></a>常量命名</h4><p>使用驼峰命名法，遵循MVC模式命名规范，在此不做赘述</p><h3 id="Android编码规范"><a href="#Android编码规范" class="headerlink" title="Android编码规范"></a>Android编码规范</h3><h4 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h4><p>要分门别类的存放各种类，如下图<br><img src="https://raw.githubusercontent.com/Chiachy/image/master/%E9%A1%B9%E7%9B%AE%E6%9E%B6%E6%9E%84.png" alt="项目架构"></p><h4 id="findViewByID"><a href="#findViewByID" class="headerlink" title="findViewByID"></a>findViewByID</h4><p>不太好的栗子：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">((TextView)findViewById(R.id.login_message)).setVisibility(View.VISIBLE);</div></pre></td></tr></table></figure><p></p><p>推荐写法<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> TextView mTvLoginMessage;</div><div class="line"></div><div class="line">...onCreate...&#123;</div><div class="line"></div><div class="line">mTvLoginMessage = (TextView)findViewById(R.id.login_message));</div><div class="line">mTvLoginMessage.setVisibility(View.VISIBLE);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h4 id="定义布局中的常量"><a href="#定义布局中的常量" class="headerlink" title="定义布局中的常量"></a>定义布局中的常量</h4><p>在Layout中的常量，要定义在string.xml中。</p><p>此外，在Activity中也需要这只一些常量，不能把它写死，要将其定义在string.xml中，然后每次都从资源文件中取值，如下所示：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String loadMessage = <span class="keyword">this</span>.getString(R.string.loadMessage)；</div></pre></td></tr></table></figure><p></p><h4 id="Layout中字体大小"><a href="#Layout中字体大小" class="headerlink" title="Layout中字体大小"></a>Layout中字体大小</h4><p>Layout中所有控件的字体大小，都要定义在dimens.xml中，它相当于网站的CSS样式表，如下所示：<br><img src="http://i2.piimg.com/570064/63e37945ecda0bee.png" alt="定义字体"></p><h4 id="新的onCreate周期"><a href="#新的onCreate周期" class="headerlink" title="新的onCreate周期"></a>新的onCreate周期</h4><p>遵循单一职责的定义，一个类或者方法，只做一件事情。</p><p>将其主要业务代码拆分为一下三种<br>initVars()、initViews()、loadData()<br>具体如下：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line"></div><div class="line">        initVars();</div><div class="line">        initViews(savedInstanceState);</div><div class="line">        loadData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 初始化变量，包括Intent带的数据和Activity内的变量</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initVars</span><span class="params">()</span></span>&#123;</div><div class="line">        Bundle bundle = getIntent().getExtras();</div><div class="line"></div><div class="line">        GankInfo gankContentsEntity = <span class="keyword">new</span> GankInfo();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 加载layout布局文件；</div><div class="line">     * 初始化控件；</div><div class="line">     * 为控件附加相应事件方法。</div><div class="line">     * <span class="doctag">@param</span> savedInstanceState</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initViews</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 调用MobileAPI获取数据</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">()</span></span>&#123;</div><div class="line">        String gankUrl = <span class="string">"http://gank.io/api/search/query/listview/category/Android/count/10/page/1"</span>;</div><div class="line"></div><div class="line">        loadGankContents();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;GankInfo&gt; <span class="title">loadGankContents</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p></p><h4 id="坚持使用Gson来作为MobileAPI的数据载体"><a href="#坚持使用Gson来作为MobileAPI的数据载体" class="headerlink" title="坚持使用Gson来作为MobileAPI的数据载体"></a>坚持使用Gson来作为MobileAPI的数据载体</h4><p>像JSONObject、JSONArray、HashMap&lt; String, Object &gt;、ArrayList&lt; String, Object &gt;这些不能序列化的实体，都禁止使用。除非他们仅仅是为了实现某个算法，在方法内部临时使用。千万别偷懒哦!</p><h4 id="为控件添加事件"><a href="#为控件添加事件" class="headerlink" title="为控件添加事件"></a>为控件添加事件</h4><p>以Button为例，为按钮添加点击事件，统一使用以下方式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">btnLogin = (Button)findViewById(R.id.btn_login);</div><div class="line">btnLogin.setOnClickListener(</div><div class="line">	<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">		<span class="meta">@Override</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span></span>&#123;</div><div class="line">			login();</div><div class="line">		&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>不要在布局控件中使用“onClick”属性直接声明事件方法</p><h4 id="Activity中不要嵌套内部类"><a href="#Activity中不要嵌套内部类" class="headerlink" title="Activity中不要嵌套内部类"></a>Activity中不要嵌套内部类</h4><p>该放哪就放哪</p><h4 id="Adapter编码规范"><a href="#Adapter编码规范" class="headerlink" title="Adapter编码规范"></a>Adapter编码规范</h4><ul><li>所有的Adapter都放在adapter路径中</li><li>Adapter绑定的数据，一律为ArrayList&lt; 自定义可序列化实体 &gt;</li><li>在Adapter中创建合适于列表自身的ViewHolder实体类。请统一命名为ViewHolder。</li></ul><h4 id="图片的处理"><a href="#图片的处理" class="headerlink" title="图片的处理"></a>图片的处理</h4><p>尽量使用第三方组件ImageLoader或Fresco来进行异步加载（这个还要我们进一步讨论，统一意见）</p><h4 id="为节省内存，请使用ArrayList-lt-自定义实体-gt-，而不是HashMap"><a href="#为节省内存，请使用ArrayList-lt-自定义实体-gt-，而不是HashMap" class="headerlink" title="为节省内存，请使用ArrayList&lt; 自定义实体 &gt;，而不是HashMap"></a>为节省内存，请使用ArrayList&lt; 自定义实体 &gt;，而不是HashMap</h4><p>ArrayList虽然慢一点，每次查找一个元素，都是o(n)，而HashMap则是o(1)，但是ArrayList在内存的使用上少于HashMap。对于Android手机，尤其是配置不是很壕的手机，我们开发Aoo的策略是尽量不要占用太多内存，所以请优先选择ArrayList。</p><h3 id="日常文档工具选择"><a href="#日常文档工具选择" class="headerlink" title="日常文档工具选择"></a>日常文档工具选择</h3><h4 id="使用Markdown"><a href="#使用Markdown" class="headerlink" title="使用Markdown"></a>使用Markdown</h4><p>这样的好处是自然是可以快速在线查看，不用担心因为打开Office套件导致的不必要的内存消耗。<br>可以在<a href="https://www.zybuluo.com/" target="_blank" rel="external">作业部落</a>上在线编辑md文本，然后分享浏览链接；或者自己将markdown上传至自己的博客中后，上传浏览链接</p><h4 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h4><p>涉及到比较高级的软件文档绘图（比如画实体图，序列图或者UI原型图），可以使用<a href="https://www.processon.com/" target="_blank" rel="external">PressOn</a>绘制，优点也是可以在线编辑和浏览，方便快速。</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android屏幕适配基础]]></title>
      <url>http://yoursite.com/2016/07/27/Android%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p><img src="http://p1.bqimg.com/570064/335b2c3b8ad825a8.png" alt="屏幕适配"></p><p>Android设备的物理尺寸、分辨率的类别众多，可能你为一种设备设计了一套UI是符合要求的，但是在另一设备上显示的就完全不是你想要的。</p><a id="more"></a><p>有以下概念需要搞清楚</p><ul><li>屏幕的尺寸（Screen Size）：指屏幕对角线的长度（单位inch，即英寸）</li><li>屏幕的密度（Screen Density）：指单位长度上的像素点数（dots per inches）</li><li>独立像素密度或密度无关像素（Density-independent pixel，dp）：标准是160dpi，此时1dp对应1个pixel。dp转换为屏幕像素的计算公式是：px=dp×（dpi/160）。根据公式，可知240dpi的屏幕，1dp对应1.5个pixel。屏幕密度越大，1dp对应的像素点数越多。</li></ul><p>Android屏幕有两种分类方式，有以下两种：<br>（1）以总像素数分<br>每种屏幕都有其最小的分辨率；xlarge屏幕最小分辨率为960×720dp；large屏幕最小的分辨率为640dp×480dp<br>下图可明示：<br><img src="http://i2.piimg.com/570064/ed9ea48e45191284.png" alt="按总像素分类"></p><p>（2）以屏幕密度分<br><img src="http://i2.piimg.com/570064/7f56b062417f2d33.png" alt="按总像素分类"></p><p>屏幕的匹配要以上面两种方式为参考，开发过程中需要比较两图的对应关系。此外有时还需要考虑屏幕是水平还是竖直的</p><p><strong><em>参见</em></strong><br>《深入理解Android网络编程-技术详解与最佳实现》 陈文 郭依正 著</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[当VCS遇上Social Media]]></title>
      <url>http://yoursite.com/2016/07/27/%E5%BD%93VCS%E9%81%87%E4%B8%8A%E7%A4%BE%E4%BA%A4%E4%BC%A0%E5%AA%92%E5%B9%B3%E5%8F%B0-%E8%AE%BAGithub%E5%AF%B9%E5%85%A8%E7%90%83IT%E8%A1%8C%E4%B8%9A%E7%9A%84%E5%BD%B1%E5%93%8D/</url>
      <content type="html"><![CDATA[<p>当VCS遇上Social Media<br>——IT行业云端协作媒体的创新、优势及行业影响之研究（论文大纲及写作思路）</p><h2><a href="#" class="headerlink"></a><img src="http://i2.piimg.com/570064/bf922b1663f56975.png" alt="01"></h2><a id="more"></a><h3 id="一、云端协作媒体的前世今生"><a href="#一、云端协作媒体的前世今生" class="headerlink" title="一、云端协作媒体的前世今生"></a>一、云端协作媒体的前世今生</h3><h4 id="（一）VCS的出现、普及"><a href="#（一）VCS的出现、普及" class="headerlink" title="（一）VCS的出现、普及"></a>（一）VCS的出现、普及</h4><p>(可以用Git举例,然后类似的也要多举举例)<br><a href="http://hao.jser.com/archive/1665/" target="_blank" rel="external">参考这个，但还可以一个个搜集来扩充上面的每一个的信息</a></p><h4 id="（二）VCS的社交化传媒化"><a href="#（二）VCS的社交化传媒化" class="headerlink" title="（二）VCS的社交化传媒化"></a>（二）VCS的社交化传媒化</h4><p>（说明什么是云端协作，还有代码托管平台社交化，如最开始的图是一个不太文雅的例子）</p><h4 id="（三）精准分析——github-com何以成为“全球最大同性交友”传媒平台"><a href="#（三）精准分析——github-com何以成为“全球最大同性交友”传媒平台" class="headerlink" title="（三）精准分析——github.com何以成为“全球最大同性交友”传媒平台"></a>（三）精准分析——github.com何以成为“全球最大同性交友”传媒平台</h4><p>这里可以说明一下这个网站提供的类似服务，特色<br>（或者用国内的Coding.net重点阐述“云端协作媒体”的存在意义）</p><h3 id="二、基于云端的代码托管媒体之优势与困境"><a href="#二、基于云端的代码托管媒体之优势与困境" class="headerlink" title="二、基于云端的代码托管媒体之优势与困境"></a>二、基于云端的代码托管媒体之优势与困境</h3><h4 id="（一）人人都是“自媒体”——云端协作的自由与开放"><a href="#（一）人人都是“自媒体”——云端协作的自由与开放" class="headerlink" title="（一）人人都是“自媒体”——云端协作的自由与开放"></a>（一）人人都是“自媒体”——云端协作的自由与开放</h4><p>比如，可以在上面免费搭博客，还可以为自己的项目搭建一个主页做详细说明，免去自己建站、自己搭建和维护服务器的方便，此外，你甚至可以在上面做自己的求职简历，还有很多其他</p><h4 id="（二）世纪之争：自由、公开与限制、私有"><a href="#（二）世纪之争：自由、公开与限制、私有" class="headerlink" title="（二）世纪之争：自由、公开与限制、私有"></a>（二）世纪之争：自由、公开与限制、私有</h4><p>（可以举例赵家人追究github的国外类似事件，还可以浓墨重彩的在软件版权和GUN之争上做文章，然后有很多国外维权组织和公益组织的官方主页及他们发起的合作项目，在这方面的应用，别的我不清楚，反正码农圈子里有很多，比如Android源码在github的开源，苹果的开发语言Swift源码的开源等。毕竟这些东西都是代码，不管是这个代码做出来的网页，还是它的代码本身，都跳不出这个框架，毕竟都有托管在Github上，如果前面用了Coding.net举例，这里就一定要提Github。否则局限在墙内这些就不好说了）</p><p>然后反过来举例，就是这类网站通过付费创建的私有代码库导致的公开阻断，社交元素缺失，以及软件闭源的坏处</p><h4 id="（三）项目审核制度的诞生"><a href="#（三）项目审核制度的诞生" class="headerlink" title="（三）项目审核制度的诞生"></a>（三）项目审核制度的诞生</h4><p>有关部门政策的要求（主要是国内），以及github迫于压力而产生的审核制度</p><h3 id="三、展望云端协作媒体的未来"><a href="#三、展望云端协作媒体的未来" class="headerlink" title="三、展望云端协作媒体的未来"></a>三、展望云端协作媒体的未来</h3><h4 id="一-类似Github及Coding-net的进一步发展前景"><a href="#一-类似Github及Coding-net的进一步发展前景" class="headerlink" title="(一)类似Github及Coding.net的进一步发展前景"></a>(一)类似Github及Coding.net的进一步发展前景</h4><p>（这个得你自己上网查资料消化了以后，用自己的语言写一遍了，因为我看的也少）</p><h4 id="二-云端协做模式对于其他行业的参考价值"><a href="#二-云端协做模式对于其他行业的参考价值" class="headerlink" title="(二)云端协做模式对于其他行业的参考价值"></a>(二)云端协做模式对于其他行业的参考价值</h4><p><a href="https://www.zhihu.com/question/43614861" target="_blank" rel="external">例如新闻类</a><br>还可以找找其他协作性比较强的行业</p><hr><p><strong>禁止转载</strong>（该论题及其大纲全文已授权重庆邮电大学移通学院2013届苏文合作著作论文使用）</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android网络编程（1）- HTTP]]></title>
      <url>http://yoursite.com/2016/07/23/Android%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%EF%BC%881%EF%BC%89-HTTP/</url>
      <content type="html"><![CDATA[<h2 id="HTTP简介"><a href="#HTTP简介" class="headerlink" title="HTTP简介"></a>HTTP简介</h2><p><img src="http://p1.bqimg.com/570064/bfb9276bbb6bf515.jpg" alt="http"></p><a id="more"></a><h3 id="1-HTTP的主要特点"><a href="#1-HTTP的主要特点" class="headerlink" title="1.HTTP的主要特点"></a>1.HTTP的主要特点</h3><ul><li>支持C/S（客户端/服务器）模式</li><li>简单快速：<br>C向服务器请求服务时，只需传送请求方法和路径。</li><li>灵活：<br>允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</li><li>无连接：<br>限制每次简介只处理一个请求。服务器处理完成客户的请求，并收到客户的应答后，即断开连接。</li><li>无状态：<br>指对事务没有记忆功能。如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不惜要先前信息时，它的应答就较快。</li></ul><h3 id="2-HTTP的URL"><a href="#2-HTTP的URL" class="headerlink" title="2.HTTP的URL"></a>2.HTTP的URL</h3><p>url一般形式如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://host[&quot;:&quot;port][abs_path]</div></pre></td></tr></table></figure><p></p><p>其中，<br><code>host</code>表示合法的Internet主机域名或者IP地址；<br><code>port</code>指定一个端口号，为空则使用默认端口80；<br><code>abs_path</code>指定请求资源的URI（Uniform Resource Identifier，通用资源标志符，指Web上任意的可用资源）。</p><h3 id="3-HTTP的请求报文及响应报文"><a href="#3-HTTP的请求报文及响应报文" class="headerlink" title="3.HTTP的请求报文及响应报文"></a>3.HTTP的请求报文及响应报文</h3><h4 id="HTTP请求报文"><a href="#HTTP请求报文" class="headerlink" title="HTTP请求报文"></a>HTTP请求报文</h4><p><img src="https://raw.githubusercontent.com/Chiachy/image/master/HTTP%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="HTTP请求报文"><br>请求报文由四部分组成：</p><h5 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h5><p>如上图，由请求方法字段、URI字段和HTTP协议版本字段组成，他们之间用空格分隔，<strong>格式</strong>如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Method Request-URL HTTP-Version CPLF</div><div class="line">Exp:GET /form.html HTTP/1.1 (CRLF)</div></pre></td></tr></table></figure><p></p><p>其中：<br><code>Method</code> 表示请求方法；<br><code>Request-URL</code> 是一个统一资源标识符；<br><code>HTTP-Version</code> 表示请求的HTTP协议版本；<br><code>CPLF</code> 表示回车和换行（除了作为结尾的CRLF外，不允许出现单独的CR或LF字符）</p><p><strong>请求方法</strong>有多种：</p><table><thead><tr><th>请求方法</th><th>含义</th></tr></thead><tbody><tr><td>GET</td><td>请求获取Request-URI所标识的资源</td></tr><tr><td>POST</td><td>在Request-URI所标识的资源后附加新的数据</td></tr><tr><td>HEAD</td><td>请求获取由Request-URI所标识的资源的响应消息报头</td></tr><tr><td>PUT</td><td>请求服务器储存一个资源，并用Request-URI作为其标识</td></tr><tr><td>DELETE</td><td>请求服务器删除Request-URI所标识的资源</td></tr><tr><td>TRACE</td><td>请求服务器回送收到的请求信息，主要用于测试或诊断</td></tr><tr><td>CONNECT</td><td>保留将来使用</td></tr><tr><td>OPIONS</td><td>请求查询服务器的性能，或者查询与资源相关的选项和需求</td></tr></tbody></table><h5 id="请求报头"><a href="#请求报头" class="headerlink" title="请求报头"></a>请求报头</h5><p>日后再谈</p><h5 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h5><p>最后一个请求头之后是一个空行，发送回车符合换行符，通知服务器一下不再有请求头。</p><h5 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h5><p>请求数据不再GET方法中使用，而是在POST方法中使用。POST方法适用于需要客户填写表单的场合。与请求数据相关的、最长使用的请求头是Content-Type和Content-Length。<br>在接收和解释请求消息后，服务器会返回一个HTTP响应消息。</p><h4 id="HTTP响应报文"><a href="#HTTP响应报文" class="headerlink" title="HTTP响应报文"></a>HTTP响应报文</h4><p><img src="https://raw.githubusercontent.com/Chiachy/image/master/HTTP%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F.png" alt="HTTP响应报文"></p><h5 id="状态行"><a href="#状态行" class="headerlink" title="状态行"></a>状态行</h5><p><strong>格式</strong>如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">HTTP-Version Status-Code Reason-Phrase CRLF</div><div class="line">Exp：HTTP/1.1 200 OK (CRLF)</div></pre></td></tr></table></figure><p></p><p><code>HTTP-Version</code> 表示服务器HTTP协议的版本；<br><code>Status-Code</code> 表示服务器发回的响应状态码；<br><code>Reason-Phrase</code> 表示状态代码的文本描述</p><p><strong>状态代码</strong>可能取值及其含义：</p><table><thead><tr><th>状态代码</th><th>含义</th></tr></thead><tbody><tr><td>1xx</td><td>提示信息，表示请求已接受，继续处理</td></tr><tr><td>2xx</td><td>成功，表示请求已被成功接收、理解、接受</td></tr><tr><td>3xx</td><td>重定向，要完成请求必须进行进一步的操作</td></tr><tr><td>4xx</td><td>客户端错误，请求有语法错误或请求无法实现</td></tr><tr><td>5xx</td><td>服务器端错误，服务器未能实现合理的请求</td></tr></tbody></table><p><strong>常见状态代码：</strong></p><table><thead><tr><th>状态代码</th><th>含义</th></tr></thead><tbody><tr><td>200 OK</td><td>客户端请求成功</td></tr><tr><td>400 Bad Request</td><td>客户端请求有语法错误，不能被服务器所理解</td></tr><tr><td>401 Unauthorized</td><td>请求未经授权</td></tr><tr><td>403 Forbidden</td><td>服务器收到请求，但是拒绝提供服务</td></tr><tr><td>404 Not Found</td><td>请求资源不存在，比如输入了错误的URL</td></tr><tr><td>500 Internal Server Error</td><td>服务器发生不可预的错误</td></tr><tr><td>503 Server Unavailable</td><td>服务器当前不能处理客户端的请求，一段时间后可能恢复正常</td></tr></tbody></table><h5 id="响应报头"><a href="#响应报头" class="headerlink" title="响应报头"></a>响应报头</h5><p>日后详谈</p><h5 id="空行-1"><a href="#空行-1" class="headerlink" title="空行"></a>空行</h5><h5 id="响应正文"><a href="#响应正文" class="headerlink" title="响应正文"></a>响应正文</h5><p>就是服务器返回的资源的内容</p><p>（后续待跟进）</p><h4 id="3-HTTP消息报头"><a href="#3-HTTP消息报头" class="headerlink" title="3.HTTP消息报头"></a>3.HTTP消息报头</h4><h2 id="Android中的HTTP编程"><a href="#Android中的HTTP编程" class="headerlink" title="Android中的HTTP编程"></a>Android中的HTTP编程</h2><h3 id="1-HttpClient"><a href="#1-HttpClient" class="headerlink" title="1.HttpClient"></a>1.HttpClient</h3><p><strong><em>参见</em></strong><br>《深入理解Android网络编程-技术详解与最佳实践》 陈文 郭依正 著</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[StudyJams活动感想]]></title>
      <url>http://yoursite.com/2016/06/16/StudyJams%E6%B4%BB%E5%8A%A8%E6%84%9F%E6%83%B3/</url>
      <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/8a41f469jw1f27y2nqh6ij21cw0iw77t.jpg" alt=""></p><p>收到Study Jams的快件通知，我以最快的速度前去取来快件，并打开看了看……<a id="more"></a>，果不其然，里面有一本Google<br>中国StudyJams项目经理签字颁发的结业证书（据某位学长说，比我们学校毕业证质量还好，蛤蛤），还有一<br>本Google Play应用致胜宝典，当时那个心情，让我激动了大半天！</p><p>相信每一位接触过都对Google有着非常多的好感，也许是因为他们人性化的搜索服务、油管、地图等服务，也许<br>是因为对Android系统和设备的喜爱，也许，是从开发者角度对Google及其所有产品的欣赏。就我个人而言，我第<br>一次真正接触软件开的时候，是从Android开发开始的，那个时候，Google刚推出自家的亲儿子Android Studio<br>给开发者们，经过这么长时间的不断更新迭代，Google有又一次博得了国内开发者们的青睐——对AS的赞赏一<br>直是不绝如缕。</p><p>Google一直没让人失望过，Study Jams也是如此。整个活动都有萌客服们的强力支持，课程内容也是由来自全国<br>的志愿者团队翻译并做好字幕的。此外，还有论坛和其中的小礼品（虽然我并没有兑换到，平时不太逛论坛啥的）……</p><p>其实真正让我感触很深的在于，这次活动，真正让我明白了，以分享为驱动的学习是多么的重要。虽然我还是不太<br>喜欢在陌生人面前表现，但分享和自由的氛围，对技术学习确实非常有帮助，当大家都乐于毫无保留地向大家分享<br>自己的学习心得时，我们可以学到更多，同时更加明确自己的技术方向。</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL学习笔记]]></title>
      <url>http://yoursite.com/2016/04/09/SQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%881%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="http://p1.bqimg.com/570064/b85b02a614ea3f2c.png" alt=""></p><p>适逢大二下有一门数据库原理课程，抽出空闲时间，学习在MySQL上使用数据库。</p><a id="more"></a><h2 id="创建MySQL数据库"><a href="#创建MySQL数据库" class="headerlink" title="创建MySQL数据库"></a>创建MySQL数据库</h2><p>首先，<a href="http://dev.mysql.com/downloads/mysql/6.0.html" target="_blank" rel="external">下载</a>并在Windows平台安装MySQL。</p><p>安装完毕，我们先按下表试试mysql的一些用法吧！总之个人是倾向于使用用命令行来进行MySQL的操作（一定要注意’;’的使用呀）</p><table><thead><tr><th>步骤</th><th>描述</th><th>行为</th></tr></thead><tbody><tr><td>1</td><td>进入cmd</td><td>使用你最常用的方法就好了</td></tr><tr><td>2</td><td>用root用户登陆MySQL</td><td>mysql -u root -p</td></tr><tr><td>3</td><td>创建示例数据库</td><td>create database bank;</td></tr><tr><td>4</td><td>创建用户lrngsql</td><td>grant all privileges on bank.* to ‘lrngsql’@’localhost’ identified by ‘asdf’;</td></tr><tr><td>5</td><td>退出mysql工具包</td><td>quit;</td></tr><tr><td>6</td><td>使用lrngsql用户登陆MySQL</td><td>mysql -u lrngsql -p;</td></tr><tr><td>7</td><td>关联数据库bank</td><td>use bank;</td></tr></tbody></table><h2 id="使用mysql命令行工具"><a href="#使用mysql命令行工具" class="headerlink" title="使用mysql命令行工具"></a>使用mysql命令行工具</h2><p>现在，可以使用如下所示的命令，同时指定用户名和所需要使用的数据库了（注意是否有分号’;’）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u lrngsql -p bank</div></pre></td></tr></table></figure><p>查询当前日期<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">now</span>();</div><div class="line">+<span class="comment">---------------------+</span></div><div class="line">| now()               |</div><div class="line">+<span class="comment">---------------------+</span></div><div class="line">| 2016-04-09 23:10:33 |</div><div class="line">+<span class="comment">---------------------+</span></div><div class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</div></pre></td></tr></table></figure><p></p><ul><li><code>now（）</code>是内建的MySQL函数</li><li>mysql命令行显示查询结构后，还会显示返回的行数，以及SQL语句执行的时间。</li></ul><h2 id="MySQL数据类型"><a href="#MySQL数据类型" class="headerlink" title="MySQL数据类型"></a>MySQL数据类型</h2><p><strong>1.字符型数据</strong><br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span>(n)		<span class="comment">//定长字符串，最大长度 n</span></div><div class="line">varchar(n) 	<span class="comment">//变长字符串，最大长度 n</span></div></pre></td></tr></table></figure><p></p><p>char最大长度为255字节；varchar最大长度为65535个字节。如需要储存更大长度的字符串（文章、XML等），则需使用文本类型，下文将会介绍。</p><p>在所有的主流数据库中，这两者的使用方式都是类似的。</p><ul><li><p>字符集<br>与拉丁语系不同，亚洲语言为多字符集。MySQL包括多种单字符集和多字符集来存储数据。</p><ul><li>使用<code>SHOW CHARACTER SET;</code>命令 来查看服务器服务器所支持的字符集：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">  mysql&gt; SHOW CHARAcTER SET ;</div><div class="line">+----------+---------------------------------+---------------------+--------+</div><div class="line">| Charset  | Description                     | Default collation   | Maxlen |</div><div class="line">+----------+---------------------------------+---------------------+--------+</div><div class="line">| big5     | Big5 Traditional Chinese        | big5_chinese_ci     |      2 |</div><div class="line">| dec8     | DEC West European               | dec8_swedish_ci     |      1 |</div><div class="line">| cp850    | DOS West European               | cp850_general_ci    |      1 |</div><div class="line">| hp8      | HP West European                | hp8_english_ci      |      1 |</div><div class="line">| koi8r    | KOI8-R Relcom Russian           | koi8r_general_ci    |      1 |</div><div class="line">| latin1   | cp1252 West European            | latin1_swedish_ci   |      1 |</div><div class="line">| latin2   | ISO 8859-2 Central European     | latin2_general_ci   |      1 |</div><div class="line">| swe7     | 7bit Swedish                    | swe7_swedish_ci     |      1 |</div><div class="line">| ascii    | US ASCII                        | ascii_general_ci    |      1 |</div><div class="line">| ujis     | EUC-JP Japanese                 | ujis_japanese_ci    |      3 |</div><div class="line">| sjis     | Shift-JIS Japanese              | sjis_japanese_ci    |      2 |</div><div class="line">| hebrew   | ISO 8859-8 Hebrew               | hebrew_general_ci   |      1 |</div><div class="line">| tis620   | TIS620 Thai                     | tis620_thai_ci      |      1 |</div><div class="line">| euckr    | EUC-KR Korean                   | euckr_korean_ci     |      2 |</div><div class="line">| koi8u    | KOI8-U Ukrainian                | koi8u_general_ci    |      1 |</div><div class="line">| gb2312   | GB2312 Simplified Chinese       | gb2312_chinese_ci   |      2 |</div><div class="line">| greek    | ISO 8859-7 Greek                | greek_general_ci    |      1 |</div><div class="line">| cp1250   | Windows Central European        | cp1250_general_ci   |      1 |</div><div class="line">| gbk      | GBK Simplified Chinese          | gbk_chinese_ci      |      2 |</div><div class="line">| latin5   | ISO 8859-9 Turkish              | latin5_turkish_ci   |      1 |</div><div class="line">| armscii8 | ARMSCII-8 Armenian              | armscii8_general_ci |      1 |</div><div class="line">| utf8     | UTF-8 Unicode                   | utf8_general_ci     |      3 |</div><div class="line">| ucs2     | UCS-2 Unicode                   | ucs2_general_ci     |      2 |</div><div class="line">| cp866    | DOS Russian                     | cp866_general_ci    |      1 |</div><div class="line">| keybcs2  | DOS Kamenicky Czech-Slovak      | keybcs2_general_ci  |      1 |</div><div class="line">| macce    | Mac Central European            | macce_general_ci    |      1 |</div><div class="line">| macroman | Mac West European               | macroman_general_ci |      1 |</div><div class="line">| cp852    | DOS Central European            | cp852_general_ci    |      1 |</div><div class="line">| latin7   | ISO 8859-13 Baltic              | latin7_general_ci   |      1 |</div><div class="line">| utf8mb4  | UTF-8 Unicode                   | utf8mb4_general_ci  |      4 |</div><div class="line">| cp1251   | Windows Cyrillic                | cp1251_general_ci   |      1 |</div><div class="line">| utf16    | UTF-16 Unicode                  | utf16_general_ci    |      4 |</div><div class="line">| utf16le  | UTF-16LE Unicode                | utf16le_general_ci  |      4 |</div><div class="line">| cp1256   | Windows Arabic                  | cp1256_general_ci   |      1 |</div><div class="line">| cp1257   | Windows Baltic                  | cp1257_general_ci   |      1 |</div><div class="line">| utf32    | UTF-32 Unicode                  | utf32_general_ci    |      4 |</div><div class="line">| binary   | Binary pseudo charset           | binary              |      1 |</div><div class="line">| geostd8  | GEOSTD8 Georgian                | geostd8_general_ci  |      1 |</div><div class="line">| cp932    | SJIS for Windows Japanese       | cp932_japanese_ci   |      2 |</div><div class="line">| eucjpms  | UJIS for Windows Japanese       | eucjpms_japanese_ci |      3 |</div><div class="line">| gb18030  | China National Standard GB18030 | gb18030_chinese_ci  |      4 |</div><div class="line">+----------+---------------------------------+---------------------+--------+</div><div class="line">41 rows in set (0.00 sec)</div></pre></td></tr></table></figure></li></ul><p>latin1字符集在初次安装时会被自动作为默认的字符集。为数据列制定非默认的字符集，至于要在类型定义后加上系统支持的字符集名称，如：</p><p><code>varchar(30) character set utf8</code></p><p>亦可以改变整个数据库的默认字符集：</p><p><code>create database foreign_sales character set utf8;</code></p></li></ul><p><strong>2.文本数据</strong></p><p>当数据大于64kb（varchar上限）时食用</p><table><thead><tr><th>文本类型</th><th>最大长度</th></tr></thead><tbody><tr><td>tinytext</td><td>255</td></tr><tr><td>text</td><td>65535</td></tr><tr><td>mediumtext</td><td>16777215</td></tr><tr><td>longtext</td><td>4294967295</td></tr></tbody></table><p><em>使用注意：</em></p><ul><li><p>超过最大长度时，数据将会被截断</p></li><li><p>向文本列装载数据时，不会消除数据尾部的空格</p></li><li><p>这些类型仅支持MySQL服务器。SQL Server对于大型数据只提供text类型，而DB2与Oracle使用的数据类型名称为clob，即Character Large Object；</p></li><li><p>由于varchar最大长度，一般不使用表中前两种</p></li></ul><p><strong>3.数值型数据</strong></p><p>对于整型，有tinyint、smallint、mediumint、int、bigint等；</p><p>对于浮点，有float（p,s）、double（p,s），p制定左边到右边的数字总位数，而s指定小数点右边所指定的数字位数，p/s可不制定。</p><p>整型与浮点型都可以使用unsigned定义，但float仅仅是不能存放负数，不改变数据存放范围</p><p><strong>4.时间数据</strong></p><table><thead><tr><th>类型</th><th>默认格式</th></tr></thead><tbody><tr><td>date</td><td>YYYY-MM-DD</td></tr><tr><td>datetime</td><td>YYYY-MM-DD HH:MI:SS</td></tr><tr><td>timestamp</td><td>YYYY-MM-DD HH:MI:SS</td></tr><tr><td>year</td><td>YYYY</td></tr><tr><td>time</td><td>HHH:MI:SS</td></tr></tbody></table><h2 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h2><p><strong>1.定义主键约束</strong></p><p>建立约束（constraint），</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">CREATE TABLE person</div><div class="line">(person_id SMALLINT UNSIGNED,</div><div class="line">......</div><div class="line">CONSTRAINT pk_person PRIMARY KEY (person_id) </div><div class="line">);</div></pre></td></tr></table></figure><p>上述语句中的约束为主键约束，它被创建在person_id列上并被命名为pk_person。</p><p><strong>2.定义检查约束</strong></p><p>当涉及到“性别”这样的，有固定选项的值，可以增加一个检查约束，以限制该列只存放被允许的值：</p><p><code>gender CHAR(1) CHECK (gender IN (&#39;M&#39;,&#39;F&#39;)),</code></p><p>实际上，MySQL提供了另一种名为<code>enum</code>的字符类型，它可以将检查约束与数据类型定义融合到一起，下面提供此方式的gender列定义：</p><p><code>gender ENUM(&#39;M&#39;,&#39;F&#39;),</code></p><p>后面会介绍违反检查约束（在MySQL中为枚举值）的数据会造成的结果。</p><p><strong>3.desc 检查表的定义</strong></p><p>创建一张表以后，如果想确认表实际上是否被创建，那么可以使用describe命令（或简写desc）来检查表定义。</p><p>根据以上方案，我们在mysql命令行工具里<strong>建表</strong>,用来描述一个人所具有的基本属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt;CREATE TABLE person			//创建person表</div><div class="line">	-&gt;(person_id SMALLINT UNSIGNED,	//将person_id设为SMALLINT、UNSIGNED</div><div class="line">	-&gt;fname VARCHAR(20),			//字段“姓”</div><div class="line">	-&gt;lname VARCHAR(20),			//字段“名”</div><div class="line">	-&gt;gender ENUM(&apos;M&apos;,&apos;F&apos;),			//字段“性别”，创建检查约束为‘M’‘F’两个属性</div><div class="line">	-&gt;birth_date DATE,				//字段“生日”</div><div class="line">	-&gt;street VARCHAR(30),			//字段“住址，街道”</div><div class="line">	-&gt;city VARCHAR(20),				//字段“所住城市”</div><div class="line">	-&gt;state VARCHAR(20),			//字段“所在州”</div><div class="line">	-&gt;country VARCHAR(20),			//字段“所属国”</div><div class="line">	-&gt;postal_code VARCHAR(20),		//字段“邮编”</div><div class="line">	-&gt;CONSTRAINT pk_person PRIMARY KEY (person_id)//在person_id上创建主键约束，并被命名为pk_person</div><div class="line">	-&gt;);</div><div class="line"></div><div class="line">Query OK, 0 rows affected (0.38 sec)</div></pre></td></tr></table></figure><p>使用DESC命令来<strong>检查</strong>person表是否被定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; DESC person;</div><div class="line"></div><div class="line">+-------------+----------------------+------+-----+---------+-------+</div><div class="line"></div><div class="line">| Field       | Type                 | Null | Key | Default | Extra |</div><div class="line"></div><div class="line">+-------------+----------------------+------+-----+---------+-------+</div><div class="line"></div><div class="line">| person_id   | smallint(5) unsigned | NO   | PRI | NULL    |       |</div><div class="line"></div><div class="line">| fname       | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| lname       | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| gender      | enum(&apos;M&apos;,&apos;F&apos;)        | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| birth_date  | date                 | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| street      | varchar(30)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| city        | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| state       | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| country     | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">| postal_code | varchar(20)          | YES  |     | NULL    |       |</div><div class="line"></div><div class="line">+-------------+----------------------+------+-----+---------+-------+</div><div class="line"></div><div class="line">10 rows in set (0.10 sec)</div></pre></td></tr></table></figure><h2 id="操作与修改表"><a href="#操作与修改表" class="headerlink" title="操作与修改表"></a>操作与修改表</h2><p><strong>1.插入数据</strong></p><ul><li><p><code>insert</code>语句主要是3个组成部分:</p><ul><li><p>所要插入数据的表的吗名称；</p></li><li><p>表中需要使用的列的名称；</p></li><li><p>需要插入到列的值。</p></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; INSERT INTO person</div><div class="line"></div><div class="line">    -&gt; (person_id, fname, lname, gender, birth_date )</div><div class="line"></div><div class="line">    -&gt; VALUES( 1,&apos;William&apos;,&apos;Turner&apos;,&apos;M&apos;,&apos;1994-03-23&apos;);</div><div class="line"></div><div class="line">Query OK, 1 row affected (0.07 sec)</div></pre></td></tr></table></figure><ul><li>生成数字型主键数据：auto_increment/自增特性</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; ALTER TABLE person MODIFY person_id SMALLINT UNSIGNED AUTO_INCREMENT;</div><div class="line"></div><div class="line">Query OK, 1 row affected (0.91 sec)</div><div class="line"></div><div class="line">Records: 1  Duplicates: 0  Warnings: 0</div></pre></td></tr></table></figure><p>此后，只需向需要加入的实体中，将person_id属性设置为null即可。</p><ul><li>简单查询数据</li></ul><p>查询格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">SELECT 列名1，列名2</div><div class="line"></div><div class="line">FROM 表名</div><div class="line"></div><div class="line">WHERE 制定查询范围;</div></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; SELECT person_id ,fname, lname, birth_date</div><div class="line"></div><div class="line">    -&gt; FROM person</div><div class="line"></div><div class="line">    -&gt; WHERE person_id = 1;</div><div class="line"></div><div class="line">+-----------+---------+--------+------------+</div><div class="line"></div><div class="line">| person_id | fname   | lname  | birth_date |</div><div class="line"></div><div class="line">+-----------+---------+--------+------------+</div><div class="line"></div><div class="line">|         1 | William | Turner | 1994-03-23 |</div><div class="line"></div><div class="line">+-----------+---------+--------+------------+</div><div class="line"></div><div class="line">1 row in set (0.03 sec)</div></pre></td></tr></table></figure><ul><li>获取XML格式的数据</li></ul><p>通过键入如下命令<code>mysql -u lrngsql -p --xml bank</code></p><p>在SQL Server 数据库中，无需配置命令行工具，只是在每个查询末尾增加for xml 子句即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">SELECT * FROM favorite_food</div><div class="line"></div><div class="line">FOR XML AUTO, ELEMENTS</div></pre></td></tr></table></figure><p><strong>2.更新数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; UPDATE person</div><div class="line"></div><div class="line">    -&gt; SET street = &apos;ECJTU&apos;,</div><div class="line"></div><div class="line">    -&gt; city = &apos;Nanchang&apos;,</div><div class="line"></div><div class="line">    -&gt; state = &apos;JX&apos;,</div><div class="line"></div><div class="line">    -&gt; country = &apos;China&apos;,</div><div class="line"></div><div class="line">    -&gt; postal_code = &apos;330018&apos;</div><div class="line"></div><div class="line">    -&gt;  WHERE person_id = 1;</div><div class="line"></div><div class="line">Query OK, 1 row affected (0.07 sec)</div><div class="line"></div><div class="line">Rows matched: 1  Changed: 1  Warnings: 0</div></pre></td></tr></table></figure><p><strong>3.删除数据</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; DELETE FROM person</div><div class="line"></div><div class="line">    -&gt; WHERE person_id = 1;</div><div class="line"></div><div class="line">Query OK, 1 row affected (0.05 sec)</div></pre></td></tr></table></figure><h2 id="导致错误的情况"><a href="#导致错误的情况" class="headerlink" title="导致错误的情况"></a>导致错误的情况</h2><p><strong>1.主键不唯一</strong></p><p><strong>2.不存在的外键</strong></p><p><strong>3.列值不合法</strong></p><p><strong>4.无效的日期转换</strong></p><p>当使用的日期格式与默认的日期格式没有匹配时，会发生该错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; UPDATE person</div><div class="line"></div><div class="line">    -&gt;  SET birth_date = &apos;DEC-21-1999&apos;</div><div class="line"></div><div class="line">    -&gt; WHERE person_id = 2;</div><div class="line"></div><div class="line">ERROR 1292 (22007): Incorrect date value: &apos;DEC-21-1999&apos; for column &apos;birth_date&apos; at row 1</div></pre></td></tr></table></figure><p>使用str_to_date()函数即可转换该错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; UPDATE person</div><div class="line"></div><div class="line">    -&gt;  SET birth_date =str_to_date ( &apos;DEC-21-1999&apos;,&apos;%b-%d-%Y&apos;)</div><div class="line"></div><div class="line">    -&gt; WHERE person_id = 2;</div><div class="line"></div><div class="line">Query OK, 1 row affected (0.06 sec)</div><div class="line"></div><div class="line">Rows matched: 1  Changed: 1  Warnings: 0</div></pre></td></tr></table></figure><p>暂时写这么多吧，这只是技术博客的初次试水，个人感觉自己不应该照搬已有的文章或者学习思路在自己的技术博客上，而是一定要加上自己的个人开发总结以及平时的idea、独到的学习心得等。</p><hr><p><em>参见：</em> <a href="http://https://book.douban.com/subject/4872454/" target="_blank" rel="external">《SQL学习指南（第二版）》</a></p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TextView加下划线的方法]]></title>
      <url>http://yoursite.com/2016/04/07/TextView%E5%8A%A0%E4%B8%8A%E4%B8%8B%E5%88%92%E7%BA%BF%E7%9A%84%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>有三种为TextView加上下划线的方法：<br>1.SpannableString ;<br>2.setPaintFlags();<br>3.Html.fromHtml() ;</p><a id="more"></a><p>接下来解析三种方法：</p><h5 id="SpannableString"><a href="#SpannableString" class="headerlink" title="SpannableString"></a>SpannableString</h5><p>使用SpannableString为textView加上下划线<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String udata=<span class="string">"Underlined Text"</span>;</div><div class="line">SpannableString content = <span class="keyword">new</span> SpannableString(udata);</div><div class="line">content.setSpan(<span class="keyword">new</span> UnderlineSpan(), <span class="number">0</span>, udata.length(), <span class="number">0</span>);</div><div class="line">mTextView.setText(content);</div></pre></td></tr></table></figure><p></p><h5 id="setPainFlags（）"><a href="#setPainFlags（）" class="headerlink" title="setPainFlags（）"></a>setPainFlags（）</h5><p>使用setPainFlags（）方法<br>例：<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mTextView.setPaintFlags(mTextView.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);</div><div class="line">mTextView.setText(<span class="string">"This text will be underlined"</span>);</div></pre></td></tr></table></figure><p></p><h5 id="Html-fromHtml"><a href="#Html-fromHtml" class="headerlink" title="Html.fromHtml()"></a>Html.fromHtml()</h5><p>利用Html.fromHtml(htmlString)；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String htmlString=<span class="string">"&lt;u&gt;This text will be underlined&lt;/u&gt;"</span>;</div><div class="line">mTextView.setText(Html.fromHtml(htmlString));</div></pre></td></tr></table></figure><p><em>参见</em><a href="http://stackoverflow.com/questions/8033316/to-draw-an-underline-below-the-textview-in-android" target="_blank" rel="external">To draw an Underline below the TextView in Android - StackOverflow</a></p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书杂记]]></title>
      <url>http://yoursite.com/2016/03/12/%E8%AF%BB%E4%B9%A6%E6%9D%82%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>写在这里的笔记杂乱无章，却都是解决了一些日常生活中经常遇到的，却又不知道如何作答的问题之答案。以后又能开心地和别人装（si）逼啦！<br><a id="more"></a></p><h3 id="1-为什么原来Android设备总是慢，而且越用越慢？"><a href="#1-为什么原来Android设备总是慢，而且越用越慢？" class="headerlink" title="1 为什么原来Android设备总是慢，而且越用越慢？"></a><strong>1</strong> 为什么原来Android设备总是慢，而且越用越慢？</h3><p>Android 5.0之前的Android Runtime由Dalvik虚拟机和Android核心库组成，之后为ART模式。<br>Dalvik使用JIT解释器进行动态编译并执行，导致App运行时及较慢。<br>ART模式在用户安装App是进行预编译）（Ahead of time，简称AOT）将原本在程序运行时的编译动作提前到应用安装时，使程序在运行时减少动态编译的开销，从而提升APP的运行效率。<br>——《疯狂Android讲义（第三版）》</p><h3 id="2-天赋（我觉得能坚持不懈地做好一件事也是一种天赋）？"><a href="#2-天赋（我觉得能坚持不懈地做好一件事也是一种天赋）？" class="headerlink" title="2 天赋（我觉得能坚持不懈地做好一件事也是一种天赋）？"></a><strong>2</strong> 天赋（我觉得能坚持不懈地做好一件事也是一种天赋）？</h3><p>所有学习上的成功，都只靠两件事：策略和坚持，而坚持本身就应该是最重要的策略之一<br>——《把时间当朋友》</p><h3 id="3-我可以说自己是敏捷开发者了-逃）"><a href="#3-我可以说自己是敏捷开发者了-逃）" class="headerlink" title="3 我可以说自己是敏捷开发者了 逃）"></a><strong>3</strong> 我可以说自己是敏捷开发者了 逃）</h3><p><strong>敏捷开发宣言</strong><br>我们正通过亲身实践和帮助他人实践，揭示了一些更好的软件开发方法。通过这项工作，我们认为：</p><ul><li>个体和交互胜过过程和开发工具</li><li>可工作的软件胜过面面俱到的文档</li><li>客户协作胜过合同谈判</li><li>响应变化胜过遵循计划</li></ul><p>虽然右项也有价值，但我们认为左项具有更大的价值。<br>——《Pratices of an Agile Developer：Working in the Real World》</p><h3 id="4-毛泽东思想满分"><a href="#4-毛泽东思想满分" class="headerlink" title="4 毛泽东思想满分"></a><strong>4</strong> 毛泽东思想满分</h3><p>几乎每句所谓至理名言都有句意思相反的话与之对应，而且后者也同样在理。<br>——乔治·桑塔耶纳</p><h3 id="5-我就觉得第一个比较有意思"><a href="#5-我就觉得第一个比较有意思" class="headerlink" title="5 我就觉得第一个比较有意思"></a><strong>5</strong> 我就觉得第一个比较有意思</h3><p>如何跟踪变化？<br><strong>迭代和增量式的学习</strong>每天计划用一段时间来学习新技术，时间不需要很长，但需要经常进行。记下平时觉得不熟悉的术语或者短语，简要的记录，然后在计划的时间中深入了解。</p><p><strong>了解最新的行情</strong><br><strong>参加本地的用户组活动</strong><br><strong>参加研讨会</strong><br><strong>如饥似渴的阅读</strong><br>——《Pratices of an Agile Developer：Working in the Real World》</p><h3 id="6-嗯，千万不要被气量小导致的嫉妒心给蒙蔽了双眼"><a href="#6-嗯，千万不要被气量小导致的嫉妒心给蒙蔽了双眼" class="headerlink" title="6 嗯，千万不要被气量小导致的嫉妒心给蒙蔽了双眼"></a><strong>6</strong> 嗯，千万不要被气量小导致的嫉妒心给蒙蔽了双眼</h3><p>“每个人都比你厉害吗？那太好了！”<br>——《Pratices of an Agile Developer：Working in the Real World》</p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown的一些使用技巧]]></title>
      <url>http://yoursite.com/2016/03/01/md%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;这是在使用Markdown时遇到的一些问题，其实不过是在md里使用了HTML的语法去实现罢了。不过大神们都觉得这样使用md的话，就失去md的写作意义了。不论如何，权当码来一乐吧</p><a id="more"></a><h4 id="插入空格"><a href="#插入空格" class="headerlink" title="插入空格"></a>插入空格</h4><p>半角空格：<code>&amp;ensp;</code>或 <code>&amp;#8194;</code><br>全角空格：<code>&amp;emsp;</code> 或 <code>&amp;#8195;</code><br>(注意分号不能丢。)<br>例：&ensp;&ensp;&ensp;&ensp;&ensp;111</p><h4 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h4><p><code>&amp;nbsp;</code><br>例：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;缩X5</p><h4 id="修改字号"><a href="#修改字号" class="headerlink" title="修改字号"></a>修改字号</h4><ul><li><p><code>&lt;span style=&quot;font-size: 32px;&quot;&gt;我是变大的字&lt;/span&gt;</code><br>例：<span style="font-size:32px">我是变大的字</span></p></li><li><p><code>&lt;font size=10&gt;我是缩小的字&lt;/font&gt;</code><br>例：<font size="1">我是缩小的字</font></p></li></ul><h4 id="修改文字颜色"><a href="#修改文字颜色" class="headerlink" title="修改文字颜色"></a>修改文字颜色</h4><p><code>&lt;font color=#B22222&gt;我是姨妈红&lt;/font&gt;</code></p><p>例: <font color="#8B008B">我是基佬紫.</font> &ensp;&ensp; <font color="#B22222">我是姨妈红.</font></p><hr><p><em>参见</em><br>1.<a href="http://www.v2ex.com/t/136227" target="_blank" rel="external">markdown 如何实现首行缩进？–v2ex</a><br>2.<a href="https://www.zhihu.com/question/20951224" target="_blank" rel="external">markdown 能够对字体大小进行调整吗？–知乎</a><br>3.<a href="https://www.zhihu.com/question/20134106/answer/26866967" target="_blank" rel="external">在 Markdown 文档里如何打出空行？–知乎</a></p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[成功搭建Hexo留念]]></title>
      <url>http://yoursite.com/2016/02/28/ghpg%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>在1月初，初步在Github建立好个人博客所属库后，中途各种偷懒、各种备考复习（虽然最后还是挂了电路=<em>=）搁置了好几天。前几天，继续一步步试着使用Hexo去搭建博客。现在整理一下这段时间的遇到的坑。当自己真正投入其中时，才发现自己的自学能力和解决问题的能力是有多么的底下。<br>……(-</em>-;)嗷嗷嗷<br><strong>这篇博客记载自己在搭建博客时遇到的一些问题和解决方法，供日后参考。</strong><br><a id="more"></a></p><h3 id="第一坑：一定要跟着官方文档学习使用方法！！！"><a href="#第一坑：一定要跟着官方文档学习使用方法！！！" class="headerlink" title="第一坑：一定要跟着官方文档学习使用方法！！！"></a>第一坑：一定要跟着官方文档学习使用方法！！！</h3><p>刚上手时会有各种懵逼（比如我），看<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo官方文档</a>写的高大全，感觉非常难懂。于是可能也许大概就会像我一样，心里想着：去搜搜别人的博客看看吧。</p><p>之后，便有各种搭建环境不同，更新时间不同的所谓“详尽”教程呈现在自己的面前。虽然刚开始会觉得易于理解，也能跟着敲，但是由于版本老旧，各种坑也就显现出来……</p><p>官方文档，虽然写的不是面面俱到（比如如何搭建环境，如何生成并绑定ssh Key），但非常全面，且不可能会有致命错误。只要耐心学习，仔细琢磨，基本都能解决自己在建站时遇到的问题。</p><p>实在是试了很多遍以后还有问题，再配合搜索引擎，将自己的报错信息进行搜索，才能产生最佳食用效果。年轻人不要总是想着一晚上就能搞出大新闻啦。</p><h3 id="第二坑：一定一定要注意空格！！！"><a href="#第二坑：一定一定要注意空格！！！" class="headerlink" title="第二坑：一定一定要注意空格！！！"></a>第二坑：一定一定要注意空格！！！</h3><p>在配置Deployment时、自定义一些属性时，总是会报错报错报错……而且又找不到错误，这时候就要注意空格。实在不行，直接Copy文档里的代码样例再改。</p><h3 id="第三坑：操作最好都在Bash上完成"><a href="#第三坑：操作最好都在Bash上完成" class="headerlink" title="第三坑：操作最好都在Bash上完成"></a>第三坑：操作最好都在Bash上完成</h3><p>这个不清楚原因，应该是和操作环境有关吧，有时候用cmd出现的错误，Git Bash上就没有。（好羡慕用Mac的…T^T）</p><hr><p>我想我这段时间遇到的问题大概就是这些了，以后有时间的话会贴一点具体操作的干货在后面。</p><p>最后，谨记，一定要有<strong>耐心</strong>和<strong>信心</strong>，Hexo并不是什么高大上的玩意儿，它的目的只是为了让人们跨过自助建站的技术门槛，通过写博客的方式留下思考和感悟的工具罢了。</p><hr><p><strong>2016年7月21日更新</strong><br>今天在某人的盛情“邀请”下，我帮他解决一下建站时遇到问题的痛苦。收获颇多，在下面码上吧</p><h3 id="如何生成SSH-Key"><a href="#如何生成SSH-Key" class="headerlink" title="如何生成SSH Key"></a>如何生成SSH Key</h3><p>当deploy时遇到没有权限连接远程库的报错信息，这时很有可能是ssh key没有正确绑定导致的，这时候你就要重新将自己的ssh key绑定一次。这里码上生成的方法，剩下来的绑定工作就只要复制粘贴就行了：</p><p><strong>1.检查SSH Key是否存在</strong><br>输入下面的命令，检查是否有文件id_rsa.pub或id_dsa.pub，若有，则直接将其添加进github中，否则进入第二步<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls -al ~/.ssh</div></pre></td></tr></table></figure><p></p><p><strong>2.生成SSH Key</strong></p><ul><li>第一步：生成public/private rsa key pair</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure><ul><li>第二步：输入passphrase（本步骤可以跳过）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty for no passphrase): [Type a passphrase]</div><div class="line">Enter same passphrase again: [Type passphrase again]</div></pre></td></tr></table></figure><ul><li>第三步：将新生成的Key添加到ssh-agent中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">eval &quot;$(ssh-agent -s)&quot;</div><div class="line">Agent pid 59566</div><div class="line">ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure><p><strong>3.将SSH 绑定至Github</strong><br>用自己喜欢的文本编辑器打开id_rsa.pub文件，里面的信息即为SSH key，将这些信息复制到GitHub的Add SSH key页面即可</p><p>不同的操作系统，均有一些命令，直接将SSH key从文件拷贝到粘贴板中，如下：<br>mac<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p></p><p>windows<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure><p></p><p>linux<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install xclip</div><div class="line"></div><div class="line">#Downloads and installs xclip. If you don&apos;t have `apt-get`, you might need to use another installer (like `yum`)</div><div class="line"></div><div class="line">xclip -sel clip &lt; ~/.ssh/id_rsa.pub</div><div class="line">#Copies the contents of the id_rsa.pub file to your clipboard</div></pre></td></tr></table></figure><p></p><p><em>参见</em><br><a href="http://www.jianshu.com/p/31cbbbc5f9fa/" target="_blank" rel="external">如何生成SSH key——简书</a></p>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[第一篇博客·新的开始]]></title>
      <url>http://yoursite.com/2016/02/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p><strong>从</strong>脑海里冒出用Github Pages搭建个人博客， 到开始付诸行动一步步建站，中间搁置了将近3个月。而真正将自己的博客完整的搭起来，前前后后又经历了将近一周的时间。<br><a id="more"></a><br>因为从没使用过cmd命令行操作Windows，我在命令行中挣扎；从未使用过Ruby，以及没有源码和编译的概念，安装jekyll让我备受煎熬。最后尝试使用Hexo替代jekyll，虽然没有学习使用js，但纠结几天后，终于明白了使用方法……</p><p>我发现自己欠缺的不只是知识和技术，需要学习的也远不止现阶段接触到的皮毛之术。</p><p>对技术和能力的渴望，同时迫切地寻求自我认同感，让我内心更是备受煎熬，却又感觉无从下手。照着一篇篇博文搭建自己的个人博客网站，最后却屡屡碰壁，这一度让我怀疑自己日后能否互联网行业中生存下去。现在回头想想，大抵是不能静下来耐心学习基础知识，却对他人付出汗水获得进步之嫉妒吧，例如，Hexo建站如若从一开始便对照官方文档，我便可以少踩许多坑；如果耐心的查询求证自己的错误，并尝试多钟解决方法，我也不会花如此长的时间完成个人博客。经历了这段时间建站的波折，虽然知道这和真正的代码工作相去甚远，但我大概清楚了自己的分量，也知道自己今后努力之方向……</p><p>哈佛大学心理学教授Tal Ben-Shahar曾告诉他的学生们，当一个人想追寻自己的幸福以及成功，他必须有以下三种特质：为人<strong>乐观</strong>、对某种事物有特别的<strong>激情</strong>，以及<strong>努力</strong>地付诸行动。我想，在充斥“出名要趁早”的观念中，大概是因为“四体不勤五谷不分”，我才会对自己感到特别不满意，却又不愿意付诸改变自己的行动，最后渐渐把自己几近逼成抑郁症患者吧。</p><p>慎独，远离玩乐，唯代码与爱不能负；勤勉，静默无言，在自己的道路上努力前行。不时来到自己的博客，属于自己的一隅，用一篇篇博文洗涮内心的焦躁与疑虑。<br>终有一日，我能完成自己对自我认同的寻找——我终能找到，属于自己的那片乐土</p>]]></content>
    </entry>
    
  
  
</search>
